@startuml
enum InputUpdateType {
    None= 0,
    Dynamic= 1 << 0,
    Fixed= 1 << 1,
    BeforeRender= 1 << 2,
    Editor= 1 << 3,
    Manual= 1 << 4,
    Default= Dynamic | Fixed | Editor,
}
class InputUpdate <<static>> {
    + {static} s_UpdateStepCount : uint
    + {static} s_LatestUpdateType : InputUpdateType
    + {static} s_PlayerUpdateStepCount : UpdateStepCount
    <<internal>> {static} OnBeforeUpdate(type:InputUpdateType) : void
    <<internal>> {static} OnUpdate(type:InputUpdateType) : void
    + {static} Save() : SerializedState
    + {static} Restore(state:SerializedState) : void
    + {static} GetUpdateTypeForPlayer(mask:InputUpdateType) : InputUpdateType
    + {static} IsPlayerUpdate(updateType:InputUpdateType) : bool
}
struct UpdateStepCount {
    - m_WasUpdated : bool
    + value : uint <<get>>
    + OnBeforeUpdate() : void
    + OnUpdate() : void
}
struct SerializedState {
    + lastUpdateType : InputUpdateType
    + playerUpdateStepCount : UpdateStepCount
}
InputUpdate +-- UpdateStepCount
InputUpdate +-- SerializedState
@enduml
