@startuml
struct float3 {
    + x : float
    + y : float
    + z : float
    + {static} <<readonly>> zero : float3
    + float3(x:float, y:float, z:float)
    + float3(x:float, yz:float2)
    + float3(xy:float2, z:float)
    + float3(xyz:float3)
    + float3(v:float)
    + float3(v:bool)
    + float3(v:bool3)
    + float3(v:int)
    + float3(v:int3)
    + float3(v:uint)
    + float3(v:uint3)
    + float3(v:half)
    + float3(v:half3)
    + float3(v:double)
    + float3(v:double3)
    + xxxx : float4 <<get>>
    + xxxy : float4 <<get>>
    + xxxz : float4 <<get>>
    + xxyx : float4 <<get>>
    + xxyy : float4 <<get>>
    + xxyz : float4 <<get>>
    + xxzx : float4 <<get>>
    + xxzy : float4 <<get>>
    + xxzz : float4 <<get>>
    + xyxx : float4 <<get>>
    + xyxy : float4 <<get>>
    + xyxz : float4 <<get>>
    + xyyx : float4 <<get>>
    + xyyy : float4 <<get>>
    + xyyz : float4 <<get>>
    + xyzx : float4 <<get>>
    + xyzy : float4 <<get>>
    + xyzz : float4 <<get>>
    + xzxx : float4 <<get>>
    + xzxy : float4 <<get>>
    + xzxz : float4 <<get>>
    + xzyx : float4 <<get>>
    + xzyy : float4 <<get>>
    + xzyz : float4 <<get>>
    + xzzx : float4 <<get>>
    + xzzy : float4 <<get>>
    + xzzz : float4 <<get>>
    + yxxx : float4 <<get>>
    + yxxy : float4 <<get>>
    + yxxz : float4 <<get>>
    + yxyx : float4 <<get>>
    + yxyy : float4 <<get>>
    + yxyz : float4 <<get>>
    + yxzx : float4 <<get>>
    + yxzy : float4 <<get>>
    + yxzz : float4 <<get>>
    + yyxx : float4 <<get>>
    + yyxy : float4 <<get>>
    + yyxz : float4 <<get>>
    + yyyx : float4 <<get>>
    + yyyy : float4 <<get>>
    + yyyz : float4 <<get>>
    + yyzx : float4 <<get>>
    + yyzy : float4 <<get>>
    + yyzz : float4 <<get>>
    + yzxx : float4 <<get>>
    + yzxy : float4 <<get>>
    + yzxz : float4 <<get>>
    + yzyx : float4 <<get>>
    + yzyy : float4 <<get>>
    + yzyz : float4 <<get>>
    + yzzx : float4 <<get>>
    + yzzy : float4 <<get>>
    + yzzz : float4 <<get>>
    + zxxx : float4 <<get>>
    + zxxy : float4 <<get>>
    + zxxz : float4 <<get>>
    + zxyx : float4 <<get>>
    + zxyy : float4 <<get>>
    + zxyz : float4 <<get>>
    + zxzx : float4 <<get>>
    + zxzy : float4 <<get>>
    + zxzz : float4 <<get>>
    + zyxx : float4 <<get>>
    + zyxy : float4 <<get>>
    + zyxz : float4 <<get>>
    + zyyx : float4 <<get>>
    + zyyy : float4 <<get>>
    + zyyz : float4 <<get>>
    + zyzx : float4 <<get>>
    + zyzy : float4 <<get>>
    + zyzz : float4 <<get>>
    + zzxx : float4 <<get>>
    + zzxy : float4 <<get>>
    + zzxz : float4 <<get>>
    + zzyx : float4 <<get>>
    + zzyy : float4 <<get>>
    + zzyz : float4 <<get>>
    + zzzx : float4 <<get>>
    + zzzy : float4 <<get>>
    + zzzz : float4 <<get>>
    + xxx : float3 <<get>>
    + xxy : float3 <<get>>
    + xxz : float3 <<get>>
    + xyx : float3 <<get>>
    + xyy : float3 <<get>>
    + xyz : float3 <<get>> <<set>>
    + xzx : float3 <<get>>
    + xzy : float3 <<get>> <<set>>
    + xzz : float3 <<get>>
    + yxx : float3 <<get>>
    + yxy : float3 <<get>>
    + yxz : float3 <<get>> <<set>>
    + yyx : float3 <<get>>
    + yyy : float3 <<get>>
    + yyz : float3 <<get>>
    + yzx : float3 <<get>> <<set>>
    + yzy : float3 <<get>>
    + yzz : float3 <<get>>
    + zxx : float3 <<get>>
    + zxy : float3 <<get>> <<set>>
    + zxz : float3 <<get>>
    + zyx : float3 <<get>> <<set>>
    + zyy : float3 <<get>>
    + zyz : float3 <<get>>
    + zzx : float3 <<get>>
    + zzy : float3 <<get>>
    + zzz : float3 <<get>>
    + xx : float2 <<get>>
    + xy : float2 <<get>> <<set>>
    + xz : float2 <<get>> <<set>>
    + yx : float2 <<get>> <<set>>
    + yy : float2 <<get>>
    + yz : float2 <<get>> <<set>>
    + zx : float2 <<get>> <<set>>
    + zy : float2 <<get>> <<set>>
    + zz : float2 <<get>>
    + Equals(rhs:float3) : bool
    + <<override>> Equals(o:object) : bool
    + <<override>> GetHashCode() : int
    + <<override>> ToString() : string
    + ToString(format:string, formatProvider:IFormatProvider) : string
}
class math <<static>> <<partial>> {
    + {static} float3(x:float, y:float, z:float) : float3
    + {static} float3(x:float, yz:float2) : float3
    + {static} float3(xy:float2, z:float) : float3
    + {static} float3(xyz:float3) : float3
    + {static} float3(v:float) : float3
    + {static} float3(v:bool) : float3
    + {static} float3(v:bool3) : float3
    + {static} float3(v:int) : float3
    + {static} float3(v:int3) : float3
    + {static} float3(v:uint) : float3
    + {static} float3(v:uint3) : float3
    + {static} float3(v:half) : float3
    + {static} float3(v:half3) : float3
    + {static} float3(v:double) : float3
    + {static} float3(v:double3) : float3
    + {static} hash(v:float3) : uint
    + {static} hashwide(v:float3) : uint3
    + {static} shuffle(left:float3, right:float3, x:ShuffleComponent) : float
    + {static} shuffle(left:float3, right:float3, x:ShuffleComponent, y:ShuffleComponent) : float2
    + {static} shuffle(left:float3, right:float3, x:ShuffleComponent, y:ShuffleComponent, z:ShuffleComponent) : float3
    + {static} shuffle(left:float3, right:float3, x:ShuffleComponent, y:ShuffleComponent, z:ShuffleComponent, w:ShuffleComponent) : float4
    <<internal>> {static} select_shuffle_component(a:float3, b:float3, component:ShuffleComponent) : float
}
class DebuggerProxy <<sealed>> {
    + x : float
    + y : float
    + z : float
    + DebuggerProxy(v:float3)
}
IFormattable <|-- float3
float3 +-- DebuggerProxy
@enduml
