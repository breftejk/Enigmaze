@startuml
struct float2 {
    + x : float
    + y : float
    + {static} <<readonly>> zero : float2
    + float2(x:float, y:float)
    + float2(xy:float2)
    + float2(v:float)
    + float2(v:bool)
    + float2(v:bool2)
    + float2(v:int)
    + float2(v:int2)
    + float2(v:uint)
    + float2(v:uint2)
    + float2(v:half)
    + float2(v:half2)
    + float2(v:double)
    + float2(v:double2)
    + xxxx : float4 <<get>>
    + xxxy : float4 <<get>>
    + xxyx : float4 <<get>>
    + xxyy : float4 <<get>>
    + xyxx : float4 <<get>>
    + xyxy : float4 <<get>>
    + xyyx : float4 <<get>>
    + xyyy : float4 <<get>>
    + yxxx : float4 <<get>>
    + yxxy : float4 <<get>>
    + yxyx : float4 <<get>>
    + yxyy : float4 <<get>>
    + yyxx : float4 <<get>>
    + yyxy : float4 <<get>>
    + yyyx : float4 <<get>>
    + yyyy : float4 <<get>>
    + xxx : float3 <<get>>
    + xxy : float3 <<get>>
    + xyx : float3 <<get>>
    + xyy : float3 <<get>>
    + yxx : float3 <<get>>
    + yxy : float3 <<get>>
    + yyx : float3 <<get>>
    + yyy : float3 <<get>>
    + xx : float2 <<get>>
    + xy : float2 <<get>> <<set>>
    + yx : float2 <<get>> <<set>>
    + yy : float2 <<get>>
    + Equals(rhs:float2) : bool
    + <<override>> Equals(o:object) : bool
    + <<override>> GetHashCode() : int
    + <<override>> ToString() : string
    + ToString(format:string, formatProvider:IFormatProvider) : string
}
class math <<static>> <<partial>> {
    + {static} float2(x:float, y:float) : float2
    + {static} float2(xy:float2) : float2
    + {static} float2(v:float) : float2
    + {static} float2(v:bool) : float2
    + {static} float2(v:bool2) : float2
    + {static} float2(v:int) : float2
    + {static} float2(v:int2) : float2
    + {static} float2(v:uint) : float2
    + {static} float2(v:uint2) : float2
    + {static} float2(v:half) : float2
    + {static} float2(v:half2) : float2
    + {static} float2(v:double) : float2
    + {static} float2(v:double2) : float2
    + {static} hash(v:float2) : uint
    + {static} hashwide(v:float2) : uint2
    + {static} shuffle(left:float2, right:float2, x:ShuffleComponent) : float
    + {static} shuffle(left:float2, right:float2, x:ShuffleComponent, y:ShuffleComponent) : float2
    + {static} shuffle(left:float2, right:float2, x:ShuffleComponent, y:ShuffleComponent, z:ShuffleComponent) : float3
    + {static} shuffle(left:float2, right:float2, x:ShuffleComponent, y:ShuffleComponent, z:ShuffleComponent, w:ShuffleComponent) : float4
    <<internal>> {static} select_shuffle_component(a:float2, b:float2, component:ShuffleComponent) : float
}
class DebuggerProxy <<sealed>> {
    + x : float
    + y : float
    + DebuggerProxy(v:float2)
}
IFormattable <|-- float2
float2 +-- DebuggerProxy
@enduml
