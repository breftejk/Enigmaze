@startuml
struct SliderData {
    + position : Vector3
    + forward : Vector3
    + up : Vector3
    + right : Vector3
    + {static} <<readonly>> zero : SliderData
}
interface IGUIWrapper {
    mousePosition : Vector2 <<get>>
    mouseButton : int <<get>>
    clickCount : int <<get>>
    isShiftDown : bool <<get>>
    isAltDown : bool <<get>>
    isActionKeyDown : bool <<get>>
    eventType : EventType <<get>>
    commandName : string <<get>>
    IsMouseDown(button:int) : bool
    IsMouseUp(button:int) : bool
    IsKeyDown(keyCode:KeyCode) : bool
    GetControlID(hint:int, focusType:FocusType) : int
    LayoutControl(controlID:int, distance:float) : void
    IsControlNearest(controlID:int) : bool
    IsControlHot(controlID:int) : bool
    IsMultiStepControlHot(controlID:int) : bool
    SetControlHot(controlID:int) : void
    SetMultiStepControlHot(controlID:int) : void
    DoSlider(id:int, sliderData:SliderData, newPosition:Vector3) : bool
    UseCurrentEvent() : void
    DistanceToSegment(p1:Vector3, p2:Vector3) : float
    DistanceToSegmentClamp(p1:Vector3, p2:Vector3) : float
    DistanceToCircle(center:Vector3, radius:float) : float
    GUIToWorld(guiPosition:Vector2) : Vector3
    GUIToWorld(guiPosition:Vector2, planeNormal:Vector3, planePosition:Vector3) : Vector3
    Repaint() : void
    IsRepainting() : bool
    IsEventOutsideWindow() : bool
    SetGuiChanged(changed:bool) : void
    GetHandleSize(position:Vector3) : float
    IsViewToolActive() : bool
    HasCurrentCamera() : bool
}
class GUIWrapper {
    - nullCap : Handles.CapFunction
    - m_MultiStepHotControl : int = 0
    + mousePosition : Vector2 <<get>>
    + mouseButton : int <<get>>
    + clickCount : int <<get>>
    + isShiftDown : bool <<get>>
    + isAltDown : bool <<get>>
    + isActionKeyDown : bool <<get>>
    + eventType : EventType <<get>>
    + commandName : string <<get>>
    + IsMouseDown(button:int) : bool
    + IsMouseUp(button:int) : bool
    + IsKeyDown(keyCode:KeyCode) : bool
    + GetControlID(hint:int, focusType:FocusType) : int
    + LayoutControl(controlID:int, distance:float) : void
    + IsControlNearest(controlID:int) : bool
    + IsControlHot(controlID:int) : bool
    + IsMultiStepControlHot(controlID:int) : bool
    + SetControlHot(controlID:int) : void
    + SetMultiStepControlHot(controlID:int) : void
    + DoSlider(id:int, sliderData:SliderData, newPosition:Vector3) : bool
    + UseCurrentEvent() : void
    + DistanceToSegment(p1:Vector3, p2:Vector3) : float
    + DistanceToSegmentClamp(p1:Vector3, p2:Vector3) : float
    + DistanceToCircle(center:Vector3, radius:float) : float
    + GUIToWorld(guiPosition:Vector2) : Vector3
    + GUIToWorld(guiPosition:Vector2, planeNormal:Vector3, planePosition:Vector3) : Vector3
    + Repaint() : void
    + IsRepainting() : bool
    + SetGuiChanged(changed:bool) : void
    + IsEventOutsideWindow() : bool
    + GetHandleSize(position:Vector3) : float
    + IsViewToolActive() : bool
    + HasCurrentCamera() : bool
}
IGUIWrapper <|-- GUIWrapper
@enduml
