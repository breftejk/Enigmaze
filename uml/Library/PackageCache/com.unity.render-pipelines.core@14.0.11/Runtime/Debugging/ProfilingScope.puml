@startuml
class "TProfilingSampler`1"<TEnum> {
    <<internal>> {static} samples : Dictionary<TEnum, TProfilingSampler<TEnum>>
    {static} - TProfilingSampler()
    + TProfilingSampler(name:string)
}
class ProfilingSampler {
    + {static} Get(marker:TEnum) : ProfilingSampler
    + ProfilingSampler(name:string)
    + Begin(cmd:CommandBuffer) : void
    + End(cmd:CommandBuffer) : void
    <<internal>> IsValid() : bool
    <<internal>> sampler : CustomSampler <<get>>
    <<internal>> inlineSampler : CustomSampler <<get>>
    + name : string <<get>>
    + enableRecording : bool <<set>>
    + gpuElapsedTime : float <<get>>
    + gpuSampleCount : int <<get>>
    + cpuElapsedTime : float <<get>>
    + cpuSampleCount : int <<get>>
    + inlineCpuElapsedTime : float <<get>>
    + inlineCpuSampleCount : int <<get>>
    - ProfilingSampler()
}
struct ProfilingScope {
    + ProfilingScope(cmd:CommandBuffer, sampler:ProfilingSampler)
    + Dispose() : void
}
struct ProfilingSample {
    <<readonly>> - m_Cmd : CommandBuffer
    <<readonly>> - m_Name : string
    - m_Disposed : bool
    - m_Sampler : CustomSampler
    + ProfilingSample(cmd:CommandBuffer, name:string, sampler:CustomSampler)
    + ProfilingSample(cmd:CommandBuffer, format:string, arg:object)
    + ProfilingSample(cmd:CommandBuffer, format:string, args:object[])
    + Dispose() : void
    - Dispose(disposing:bool) : void
}
ProfilingSampler <|-- "TProfilingSampler`1"
IDisposable <|-- ProfilingScope
IDisposable <|-- ProfilingSample
@enduml
