@startuml
class InspectorCurveEditor <<sealed>> {
    + <<readonly>> settings : Settings
    <<readonly>> - m_Curves : Dictionary<SerializedProperty, CurveState>
    - m_CurveArea : Rect
    - m_SelectedCurve : SerializedProperty
    - m_SelectedKeyframeIndex : int
    - m_EditMode : EditMode
    - m_TangentEditMode : Tangent
    - m_Dirty : bool
    + InspectorCurveEditor()
    + InspectorCurveEditor(settings:Settings)
    + Add(curves:SerializedProperty[]) : void
    + Add(curve:SerializedProperty) : void
    + Add(curve:SerializedProperty, state:CurveState) : void
    + Remove(curve:SerializedProperty) : void
    + RemoveAll() : void
    + GetCurveState(curve:SerializedProperty) : CurveState
    + SetCurveState(curve:SerializedProperty, state:CurveState) : void
    + GetSelection() : Selection
    + SetKeyframe(curve:SerializedProperty, keyframeIndex:int, keyframe:Keyframe) : void
    + OnGUI(rect:Rect) : bool
    - OnCurveGUI(rect:Rect, curve:SerializedProperty, state:CurveState) : void
    - OnGeneralUI() : void
    - SaveCurve(prop:SerializedProperty, curve:AnimationCurve) : void
    - Invalidate() : void
    - SelectKeyframe(curve:SerializedProperty, keyframeIndex:int) : void
    - ContextMenuAddKey(hit:Vector3, createOnCurve:bool) : void
    - EditCreateKeyframe(curve:AnimationCurve, position:Vector3, createOnCurve:bool, zeroKeyConstantValue:float) : void
    - EditDeleteKeyframe(curve:AnimationCurve, keyframeIndex:int) : void
    - AddKeyframe(curve:AnimationCurve, newValue:Keyframe) : void
    - RemoveKeyframe(curve:AnimationCurve, keyframeIndex:int) : void
    - SetKeyframe(curve:AnimationCurve, keyframeIndex:int, newValue:Keyframe) : void
    - EditMoveKeyframe(curve:AnimationCurve, keys:Keyframe[], keyframeIndex:int) : void
    - EditMoveTangent(curve:AnimationCurve, keys:Keyframe[], keyframeIndex:int, targetTangent:Tangent, linkTangents:bool) : void
    - CurveToCanvas(keyframe:Keyframe) : Vector3
    - CurveToCanvas(position:Vector3) : Vector3
    - CanvasToCurve(position:Vector3) : Vector3
    - CurveTangentToCanvas(tangent:float) : Vector3
    - BezierSegment(start:Keyframe, end:Keyframe) : Vector3[]
    - HardSegment(start:Keyframe, end:Keyframe) : Vector3[]
    - ProjectTangent(inPosition:float, inValue:float, inTangent:float, projPosition:float) : float
    - EvaluateTangent(curve:AnimationCurve, time:float) : float
}
enum EditMode {
    None,
    Moving,
    TangentEdit,
}
enum Tangent {
    In,
    Out,
}
struct Settings {
    + bounds : Rect
    + padding : RectOffset
    + selectionColor : Color
    + curvePickingDistance : float
    + keyTimeClampingDistance : float
    + {static} defaultSettings : Settings <<get>>
}
struct CurveState {
    + visible : bool
    + editable : bool
    + minPointCount : uint
    + zeroKeyConstantValue : float
    + color : Color
    + width : float
    + handleWidth : float
    + showNonEditableHandles : bool
    + onlyShowHandlesOnSelection : bool
    + loopInBounds : bool
    + {static} defaultState : CurveState <<get>>
}
struct Selection {
    + curve : SerializedProperty
    + keyframeIndex : int
    + keyframe : Keyframe?
    + Selection(curve:SerializedProperty, keyframeIndex:int, keyframe:Keyframe?)
}
struct MenuAction {
    <<internal>> curve : SerializedProperty
    <<internal>> index : int
    <<internal>> position : Vector3
    <<internal>> MenuAction(curve:SerializedProperty)
    <<internal>> MenuAction(curve:SerializedProperty, index:int)
    <<internal>> MenuAction(curve:SerializedProperty, position:Vector3)
}
InspectorCurveEditor +-- EditMode
InspectorCurveEditor +-- Tangent
InspectorCurveEditor +-- Settings
InspectorCurveEditor +-- CurveState
InspectorCurveEditor +-- Selection
InspectorCurveEditor +-- MenuAction
@enduml
