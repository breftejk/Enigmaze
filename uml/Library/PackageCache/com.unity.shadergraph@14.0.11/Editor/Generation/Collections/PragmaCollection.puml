@startuml
class PragmaCollection {
    <<readonly>> - m_Items : List<Item>
    + PragmaCollection()
    + Add(pragmas:PragmaCollection) : PragmaCollection
    + Add(descriptor:PragmaDescriptor) : PragmaCollection
    + Add(descriptor:PragmaDescriptor, fieldCondition:FieldCondition) : PragmaCollection
    + Add(descriptor:PragmaDescriptor, fieldConditions:FieldCondition[]) : PragmaCollection
    + GetEnumerator() : IEnumerator<Item>
    - GetEnumerator() : IEnumerator
}
class Item {
    + descriptor : PragmaDescriptor <<get>>
    + fieldConditions : FieldCondition[] <<get>>
    + value : string <<get>>
    + Item(descriptor:PragmaDescriptor, fieldConditions:FieldCondition[])
}
"IEnumerable`1" "<PragmaCollection.Item>" <|-- PragmaCollection
PragmaCollection +-- Item
IConditional <|-- Item
@enduml
