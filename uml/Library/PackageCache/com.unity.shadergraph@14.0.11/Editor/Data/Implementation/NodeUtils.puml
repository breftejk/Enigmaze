@startuml
class SlotConfigurationException {
    + SlotConfigurationException(message:string)
}
class NodeUtils <<static>> {
    {static} - NodeDocSuffix : string = "-Node"
    + {static} SlotConfigurationExceptionIfBadConfiguration(node:AbstractMaterialNode, expectedInputSlots:IEnumerable<int>, expectedOutputSlots:IEnumerable<int>) : void
    + {static} GetAllEdges(node:AbstractMaterialNode) : IEnumerable<IEdge>
    + {static} GetDuplicateSafeNameForSlot(node:AbstractMaterialNode, slotId:int, name:string) : string
    + {static} DepthFirstCollectRedirectNodeFromNode(node:RedirectNodeData) : SlotReference
    + {static} DepthFirstCollectNodesFromNode(nodeList:List<AbstractMaterialNode>, node:AbstractMaterialNode, includeSelf:IncludeSelf, keywordPermutation:List<KeyValuePair<ShaderKeyword, int>>, ignoreActiveState:bool) : void
    <<internal>> {static} GetParentNodes(node:AbstractMaterialNode) : List<AbstractMaterialNode>
    - {static} ActiveLeafExists(node:AbstractMaterialNode) : bool
    - {static} GetChildNodes(node:AbstractMaterialNode) : List<AbstractMaterialNode>
    - {static} ActiveRootExists(node:AbstractMaterialNode) : bool
    - {static} ActiveTreeExists(node:AbstractMaterialNode, activeLeaf:bool, activeRoot:bool, activeTree:bool) : void
    + {static} ReevaluateActivityOfConnectedNodes(node:AbstractMaterialNode, changedNodes:PooledHashSet<AbstractMaterialNode>) : void
    + {static} ReevaluateActivityOfNodeList(nodes:IEnumerable<AbstractMaterialNode>, changedNodes:PooledHashSet<AbstractMaterialNode>) : void
    - {static} GetForest(node:AbstractMaterialNode) : HashSet<AbstractMaterialNode>
    + {static} GetDownsteamNodesForNode(nodeList:List<AbstractMaterialNode>, node:AbstractMaterialNode) : void
    + {static} CollectNodeSet(nodeSet:HashSet<AbstractMaterialNode>, slot:MaterialSlot) : void
    + {static} CollectNodeSet(nodeSet:HashSet<AbstractMaterialNode>, node:AbstractMaterialNode) : void
    + {static} CollectNodesNodeFeedsInto(nodeList:List<AbstractMaterialNode>, node:AbstractMaterialNode, includeSelf:IncludeSelf) : void
    + {static} GetDocumentationString(pageName:string) : string
    {static} - s_SlotStack : Stack<MaterialSlot>
    + {static} GetEffectiveShaderStage(initialSlot:MaterialSlot, goingBackwards:bool) : ShaderStage
    + {static} GetEffectiveShaderStageCapability(initialSlot:MaterialSlot, goingBackwards:bool) : ShaderStageCapability
    + {static} GetSlotDimension(slotValue:ConcreteSlotValueType) : string
    + {static} GetHLSLSafeName(input:string) : string
    {static} <<readonly>> - k_HLSLNumericKeywords : string[]
    {static} <<readonly>> - k_HLSLNumericKeywordSuffixes : string[]
    {static} - m_ShaderLabKeywords : HashSet<string>
    {static} - m_HLSLKeywords : HashSet<string>
    {static} - m_ShaderGraphKeywords : HashSet<string>
    {static} - m_HLSLKeywordDictionaryBuilt : bool = false
    + {static} IsHLSLKeyword(id:string) : bool
    + {static} IsShaderLabKeyWord(id:string) : bool
    + {static} IsShaderGraphKeyWord(id:string) : bool
    + {static} ConvertToValidHLSLIdentifier(originalId:string, isDisallowedIdentifier:Func<string, bool>) : string
    - {static} GetDisplaySafeName(input:string) : string
    + {static} ValidateSlotName(inName:string, errorMessage:string) : bool
    + {static} FloatToShaderValue(value:float) : string
    - <<const>> k_ShaderLabInfinityAlternatrive : string = "3402823500000000000000000000000000000000 /* Infinity */"
    + {static} FloatToShaderValueShaderLabSafe(value:float) : string
}
enum IncludeSelf {
    Include,
    Exclude,
}
Exception <|-- SlotConfigurationException
NodeUtils +-- IncludeSelf
@enduml
