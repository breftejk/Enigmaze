@startuml
interface ICinemachineTargetGroup {
    Transform : Transform <<get>>
    BoundingBox : Bounds <<get>>
    Sphere : BoundingSphere <<get>>
    IsEmpty : bool <<get>>
    GetViewSpaceBoundingBox(observer:Matrix4x4) : Bounds
    GetViewSpaceAngularBounds(observer:Matrix4x4, minAngles:Vector2, maxAngles:Vector2, zRange:Vector2) : void
}
class CinemachineTargetGroup {
    + m_PositionMode : PositionMode
    + m_RotationMode : RotationMode
    + m_UpdateMethod : UpdateMethod
    + m_Targets : Target[]
    - m_MaxWeight : float
    - m_AveragePos : Vector3
    - m_BoundingBox : Bounds
    - m_BoundingSphere : BoundingSphere
    - m_LastUpdateFrame : int
    - m_ValidMembers : List<int>
    - m_MemberValidity : List<bool>
    - OnValidate() : void
    - Reset() : void
    + Transform : Transform <<get>>
    + BoundingBox : Bounds <<get>>
    + Sphere : BoundingSphere <<get>>
    + IsEmpty : bool <<get>>
    + AddMember(t:Transform, weight:float, radius:float) : void
    + RemoveMember(t:Transform) : void
    + FindMember(t:Transform) : int
    + GetWeightedBoundsForMember(index:int) : BoundingSphere
    + GetViewSpaceBoundingBox(observer:Matrix4x4) : Bounds
    - CachedCountIsValid : bool <<get>>
    - IndexIsValid(index:int) : bool
    {static} - WeightedMemberBoundsForValidMember(t:Target, avgPos:Vector3, maxWeight:float) : BoundingSphere
    + DoUpdate() : void
    - UpdateMemberValidity() : void
    - CalculateAveragePosition(maxWeight:float) : Vector3
    - CalculateBoundingBox() : Bounds
    - CalculateBoundingSphere(maxWeight:float) : BoundingSphere
    - CalculateAverageOrientation() : Quaternion
    - FixedUpdate() : void
    - Update() : void
    - LateUpdate() : void
    + GetViewSpaceAngularBounds(observer:Matrix4x4, minAngles:Vector2, maxAngles:Vector2, zRange:Vector2) : void
}
struct Target {
    + target : Transform
    + weight : float
    + radius : float
}
enum PositionMode {
    GroupCenter,
    GroupAverage,
}
enum RotationMode {
    Manual,
    GroupAverage,
}
enum UpdateMethod {
    Update,
    FixedUpdate,
    LateUpdate,
}
MonoBehaviour <|-- CinemachineTargetGroup
ICinemachineTargetGroup <|-- CinemachineTargetGroup
CinemachineTargetGroup +-- Target
CinemachineTargetGroup +-- PositionMode
CinemachineTargetGroup +-- RotationMode
CinemachineTargetGroup +-- UpdateMethod
@enduml
