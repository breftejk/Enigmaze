@startuml
class CinemachineImpulseDefinitionPropertyAttribute <<sealed>> {
}
class CinemachineImpulseDefinition {
    + m_ImpulseChannel : int = 1
    + m_ImpulseShape : ImpulseShapes
    + m_CustomImpulseShape : AnimationCurve
    + m_ImpulseDuration : float = 0.2f
    + m_ImpulseType : ImpulseTypes
    + m_DissipationRate : float
    + m_RawSignal : SignalSourceAsset = null
    + m_AmplitudeGain : float = 1f
    + m_FrequencyGain : float = 1f
    + m_RepeatMode : RepeatMode
    + m_Randomize : bool = true
    + m_TimeEnvelope : CinemachineImpulseManager.EnvelopeDefinition
    + m_ImpactRadius : float = 100
    + m_DirectionMode : CinemachineImpulseManager.ImpulseEvent.DirectionMode
    + m_DissipationMode : CinemachineImpulseManager.ImpulseEvent.DissipationMode
    + m_DissipationDistance : float = 100
    + m_PropagationSpeed : float = 343
    + OnValidate() : void
    {static} - sStandardShapes : AnimationCurve[]
    {static} - CreateStandardShapes() : void
    <<internal>> {static} GetStandardCurve(shape:ImpulseShapes) : AnimationCurve
    <<internal>> ImpulseCurve : AnimationCurve <<get>>
    + CreateEvent(position:Vector3, velocity:Vector3) : void
    + CreateAndReturnEvent(position:Vector3, velocity:Vector3) : CinemachineImpulseManager.ImpulseEvent
    - LegacyCreateAndReturnEvent(position:Vector3, velocity:Vector3) : CinemachineImpulseManager.ImpulseEvent
}
enum ImpulseShapes {
    Custom,
    Recoil,
    Bump,
    Explosion,
    Rumble,
}
enum ImpulseTypes {
    Uniform,
    Dissipating,
    Propagating,
    Legacy,
}
enum RepeatMode {
    Stretch,
    Loop,
}
class SignalSource {
    - m_Def : CinemachineImpulseDefinition
    - m_Velocity : Vector3
    + SignalSource(def:CinemachineImpulseDefinition, velocity:Vector3)
    + SignalDuration : float <<get>>
    + GetSignal(timeSinceSignalStart:float, pos:Vector3, rot:Quaternion) : void
}
class LegacySignalSource {
    - m_Def : CinemachineImpulseDefinition
    - m_Velocity : Vector3
    - m_StartTimeOffset : float = 0
    + LegacySignalSource(def:CinemachineImpulseDefinition, velocity:Vector3)
    + SignalDuration : float <<get>>
    + GetSignal(timeSinceSignalStart:float, pos:Vector3, rot:Quaternion) : void
}
PropertyAttribute <|-- CinemachineImpulseDefinitionPropertyAttribute
CinemachineImpulseDefinition +-- ImpulseShapes
CinemachineImpulseDefinition +-- ImpulseTypes
CinemachineImpulseDefinition +-- RepeatMode
CinemachineImpulseDefinition +-- SignalSource
ISignalSource6D <|-- SignalSource
CinemachineImpulseDefinition +-- LegacySignalSource
ISignalSource6D <|-- LegacySignalSource
@enduml
