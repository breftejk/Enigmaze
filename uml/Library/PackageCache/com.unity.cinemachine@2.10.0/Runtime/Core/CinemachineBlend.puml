@startuml
class CinemachineBlend {
    + CamA : ICinemachineCamera
    + CamB : ICinemachineCamera
    + BlendCurve : AnimationCurve
    + TimeInBlend : float
    + BlendWeight : float <<get>>
    + IsValid : bool <<get>>
    + Duration : float
    + IsComplete : bool <<get>>
    + Description : string <<get>>
    + Uses(cam:ICinemachineCamera) : bool
    + CinemachineBlend(a:ICinemachineCamera, b:ICinemachineCamera, curve:AnimationCurve, duration:float, t:float)
    + UpdateCameraState(worldUp:Vector3, deltaTime:float) : void
    + State : CameraState <<get>>
}
struct CinemachineBlendDefinition {
    + m_Style : Style
    + m_Time : float
    + BlendTime : float <<get>>
    + CinemachineBlendDefinition(style:Style, time:float)
    + m_CustomCurve : AnimationCurve
    {static} - sStandardCurves : AnimationCurve[]
    - CreateStandardCurves() : void
    + BlendCurve : AnimationCurve <<get>>
}
class StaticPointVirtualCamera {
    + StaticPointVirtualCamera(state:CameraState, name:string)
    + SetState(state:CameraState) : void
    + Name : string <<get>>
    + Description : string <<get>>
    + Priority : int <<get>> <<set>>
    + LookAt : Transform <<get>> <<set>>
    + Follow : Transform <<get>> <<set>>
    + State : CameraState <<get>>
    + VirtualCameraGameObject : GameObject <<get>>
    + IsValid : bool <<get>>
    + ParentCamera : ICinemachineCamera <<get>>
    + IsLiveChild(vcam:ICinemachineCamera, dominantChildOnly:bool) : bool
    + UpdateCameraState(worldUp:Vector3, deltaTime:float) : void
    + InternalUpdateCameraState(worldUp:Vector3, deltaTime:float) : void
    + OnTransitionFromCamera(fromCam:ICinemachineCamera, worldUp:Vector3, deltaTime:float) : void
    + OnTargetObjectWarped(target:Transform, positionDelta:Vector3) : void
}
class BlendSourceVirtualCamera {
    + BlendSourceVirtualCamera(blend:CinemachineBlend)
    + Blend : CinemachineBlend <<get>> <<set>>
    + Name : string <<get>>
    + Description : string <<get>>
    + Priority : int <<get>> <<set>>
    + LookAt : Transform <<get>> <<set>>
    + Follow : Transform <<get>> <<set>>
    + State : CameraState <<get>>
    + VirtualCameraGameObject : GameObject <<get>>
    + IsValid : bool <<get>>
    + ParentCamera : ICinemachineCamera <<get>>
    + IsLiveChild(vcam:ICinemachineCamera, dominantChildOnly:bool) : bool
    + CalculateNewState(deltaTime:float) : CameraState
    + UpdateCameraState(worldUp:Vector3, deltaTime:float) : void
    + InternalUpdateCameraState(worldUp:Vector3, deltaTime:float) : void
    + OnTransitionFromCamera(fromCam:ICinemachineCamera, worldUp:Vector3, deltaTime:float) : void
    + OnTargetObjectWarped(target:Transform, positionDelta:Vector3) : void
}
enum Style {
    Cut,
    EaseInOut,
    EaseIn,
    EaseOut,
    HardIn,
    HardOut,
    Linear,
    Custom,
}
ICinemachineCamera <|-- StaticPointVirtualCamera
ICinemachineCamera <|-- BlendSourceVirtualCamera
CinemachineBlendDefinition +-- Style
@enduml
