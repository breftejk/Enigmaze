@startuml
class ObjectTreeUtil <<static>> {
    + {static} GetFullName(current:GameObject) : string
    + {static} FindObjectFromFullName(fullName:string, roots:List<GameObject>) : GameObject
    + {static} FindAllRootObjectsInOpenScenes() : List<GameObject>
    + {static} FindAllBehavioursInOpenScenes() : List<T>
}
class GameObjectFieldScanner {
    + OnLeafField : OnLeafFieldDelegate
    + OnFieldValueChanged : OnFieldValueChangedDelegate
    + FilterField : FilterFieldDelegate
    + FilterComponent : FilterComponentDelegate
    + LeafObject : UnityEngine.Object <<get>>
    <<const>> - kBindingFlags : BindingFlags
    - ScanFields(fullName:string, type:Type, obj:object) : bool
    {static} - GetValue(type:Type) : object
    - ScanFields(fullName:string, b:MonoBehaviour) : bool
    + ScanFields(go:GameObject, prefix:string) : bool
}
class ObjectStateSaver {
    - mObjectFullPath : string
    - mValues : Dictionary<string, string>
    + ObjetFullPath : string <<get>>
    + CollectFieldValues(go:GameObject) : void
    + FindSavedGameObject(roots:List<GameObject>) : GameObject
    + PutFieldValues(go:GameObject, roots:List<GameObject>) : bool
    {static} - FilterField(fullName:string, fieldInfo:FieldInfo) : bool
    + {static} HasSaveDuringPlay(b:MonoBehaviour) : bool
    {static} - LeafObjectFromString(type:Type, value:string, roots:List<GameObject>) : object
    {static} - StringFromLeafObject(obj:object) : string
}
class SaveDuringPlay {
    + {static} kEnabledKey : string = "SaveDuringPlay_Enabled"
    + {static} Enabled : bool <<get>> <<set>>
    {static} - SaveDuringPlay()
    {static} - OnPlayStateChanged() : void
    {static} - sWaitStartTime : float = 0
    {static} - OnEditorUpdate() : void
    + {static} OnHotSave : OnHotSaveDelegate
    {static} - FindInterestingObjects() : HashSet<GameObject>
    {static} - sSavedStates : List<ObjectStateSaver> = null
    {static} - SaveAllInterestingStates() : void
    {static} - RestoreAllInterestingStates() : void
}
@enduml
