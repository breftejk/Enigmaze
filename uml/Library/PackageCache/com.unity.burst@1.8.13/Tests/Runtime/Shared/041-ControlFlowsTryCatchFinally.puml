@startuml
class ControlFlowsTryCatchFinally {
    + {static} TryFinallySimple(i:int) : int
    {static} - Oof() : void
    + {static} TryFinallyFirstBlock() : void
    {static} - MagicA(b:int, f:int, h:int, s:CustomBuffer) : int
    {static} - MagicB(c:int, t:int) : bool
    + {static} TryUnbalancedFinally(i:int) : int
    + {static} TryFinallyComplex1(i:int) : int
    + {static} TryFinallyComplex2(i:int) : int
    + {static} TryFinallyComplex3(x:int) : int
    + {static} TryUsingDispose() : int
    + {static} ForEachTryFinally() : int
    + {static} TryCatch() : int
}
struct CustomBuffer {
    - <<readonly>> _size : int
    - _buffer : byte*
    + CustomBuffer(size:int)
    + Hash() : int
    + <<unsafe>> Dispose() : void
}
struct RangeEnumerable {
    - <<readonly>> _from : int
    - <<readonly>> _to : int
    + RangeEnumerable(from:int, to:int)
    + GetEnumerator() : Enumerator
    - GetEnumerator() : IEnumerator<int>
    - GetEnumerator() : IEnumerator
}
struct Enumerator {
    - <<readonly>> _from : int
    - <<readonly>> _to : int
    + Enumerator(from:int, to:int)
    + Dispose() : void
    + MoveNext() : bool
    + Reset() : void
    + Current : int <<get>>
    - Current : object <<get>>
}
ControlFlowsTryCatchFinally +-- CustomBuffer
IDisposable <|-- CustomBuffer
ControlFlowsTryCatchFinally +-- RangeEnumerable
"IEnumerable`1" "<int>" <|-- RangeEnumerable
RangeEnumerable +-- Enumerator
"IEnumerator`1" "<int>" <|-- Enumerator
@enduml
