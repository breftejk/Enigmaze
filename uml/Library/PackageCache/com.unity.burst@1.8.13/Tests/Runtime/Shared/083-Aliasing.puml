@startuml
class Aliasing <<partial>> {
    + {static} <<unsafe>> CheckNoAliasFieldWithItself(s:NoAliasField) : void
    + {static} <<unsafe>> CheckNoAliasFieldWithAnotherPointer(s:NoAliasField) : void
    + {static} <<unsafe>> CheckNoAliasFieldWithNull(s:NoAliasField) : void
    + {static} <<unsafe>> CheckAliasFieldWithNull(s:NoAliasField) : void
    - {static} <<unsafe>> NoAliasInfoSubFunctionAlias(a:int*, b:int*) : void
    + {static} <<unsafe>> CheckNoAliasFieldSubFunctionAlias(s:NoAliasField) : void
    + {static} <<unsafe>> CheckCompareWithItself(s:NoAliasField) : void
    - {static} <<unsafe>> AliasInfoSubFunctionNoAlias(a:int*, b:int*) : void
    + {static} <<unsafe>> CheckNoAliasFieldSubFunctionWithNoAliasParameter(s:NoAliasField) : void
    - {static} <<unsafe>> AliasInfoSubFunctionTwoSameTypedStructs(s0:NoAliasField, s1:NoAliasField) : void
    + {static} <<unsafe>> CheckNoAliasFieldAcrossTwoSameTypedStructs(s0:NoAliasField, s1:NoAliasField) : void
    + {static} CheckNoAliasRefs(a:int, b:int) : void
    + {static} CheckNoAliasRefsAcrossTypes(a:int, b:float) : void
    + {static} CheckNoAliasRefsInUnion(u:Union) : void
    + {static} <<unsafe>> CheckNoAliasOfSubStructs(s:ContainerOfManyNoAliasFields) : void
    + {static} <<unsafe>> CheckNoAliasFieldCompareWithParentStruct(s:ContainerOfManyNoAliasFields) : void
    + {static} <<unsafe>> CheckStructPointerOfSameTypeInStruct(l:LinkedList) : void
    + {static} <<unsafe>> CheckStructWithNoAlias(s:NoAliasWithContentsStruct) : void
    + {static} <<unsafe>> CheckStructWithNoAliasAndSubStructs(s:DoesAliasWithSubStructPointersStruct) : void
    + {static} <<unsafe>> CheckAliasingWithSelf() : void
    + {static} <<unsafe>> CheckAliasingWithHiddenSelf() : void
    - {static} <<unsafe>> NoAliasReturn(size:int) : int*
    + {static} <<unsafe>> CheckNoAliasReturn(s:NoAliasField) : void
    + {static} <<unsafe>> CheckMallocIsNoAlias() : void
    - {static} <<unsafe>> BumpAlloc(alloca:int*) : int*
    + {static} <<unsafe>> CheckBumpAllocIsNoAlias() : void
    + {static} <<unsafe>> CheckInRefOut(a:int, b:int, c:int) : void
    + {static} <<unsafe>> CheckOutOut(a:int, b:int) : void
    - {static} <<unsafe>> OutOfBoundsGEPNoAlias(someData:SomeData*) : void
    + {static} <<unsafe>> CheckOutOfBoundsGEPNoAlias() : void
    + {static} <<unsafe>> CheckAliasingOfStructWithPadding(x:StructWithPadding) : void
}
struct NoAliasField {
    + ptr1 : int*
    + ptr2 : int*
    + Compare(other:NoAliasField) : void
    + Compare(other:ContainerOfManyNoAliasFields) : void
}
struct ContainerOfManyNoAliasFields {
    + s0 : NoAliasField
    + s1 : NoAliasField
    + s2 : NoAliasField
    + s3 : NoAliasField
}
struct Union {
    + a : ulong
    + b : int
    + c : float
}
struct LinkedList {
    + next : LinkedList*
}
struct NoAliasWithContentsStruct {
    + ptr0 : void*
    + ptr1 : void*
}
struct DoesAliasWithSubStructPointersStruct {
    + s : NoAliasWithContentsStruct*
    + ptr : void*
    + Dispose() : void
}
struct AliasingWithSelf {
    + ptr : AliasingWithSelf*
    + CheckAlias() : void
}
struct AliasingWithHiddenSelf {
    + ptr : void*
    + CheckAlias() : void
}
struct SomeData {
    + A : int
}
struct StructWithPadding {
    + A : int*
    + B : int*
    + C : int*
}
class Provider {
    + Value : object <<get>>
}
class Provider {
    + Value : object <<get>>
}
class Provider {
    + Value : object <<get>>
}
class Provider {
    + Value : object <<get>>
}
class Provider {
    + Value : object <<get>>
}
class Provider {
    + Value : object <<get>>
}
class Provider {
    + Value : object <<get>>
}
Aliasing +-- NoAliasField
Aliasing +-- ContainerOfManyNoAliasFields
Aliasing +-- Union
Aliasing +-- LinkedList
Aliasing +-- NoAliasWithContentsStruct
Aliasing +-- DoesAliasWithSubStructPointersStruct
IDisposable <|-- DoesAliasWithSubStructPointersStruct
Aliasing +-- AliasingWithSelf
Aliasing +-- AliasingWithHiddenSelf
Aliasing +-- SomeData
Aliasing +-- StructWithPadding
NoAliasField +-- Provider
IArgumentProvider <|-- Provider
ContainerOfManyNoAliasFields +-- Provider
IArgumentProvider <|-- Provider
Union +-- Provider
IArgumentProvider <|-- Provider
LinkedList +-- Provider
IArgumentProvider <|-- Provider
NoAliasWithContentsStruct +-- Provider
IArgumentProvider <|-- Provider
DoesAliasWithSubStructPointersStruct +-- Provider
IArgumentProvider <|-- Provider
StructWithPadding +-- Provider
IArgumentProvider <|-- Provider
@enduml
