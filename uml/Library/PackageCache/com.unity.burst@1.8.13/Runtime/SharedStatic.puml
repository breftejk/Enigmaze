@startuml
struct "SharedStatic`1"<T> {
    - <<readonly>> _buffer : void*
    - SharedStatic(buffer:void*)
    + Data : ref T <<get>>
    + UnsafeDataPointer : void* <<get>>
    + {static} GetOrCreate(alignment:uint) : SharedStatic<T>
    + {static} GetOrCreate(alignment:uint) : SharedStatic<T>
    - <<const>> DefaultAlignment : uint = 16
    + {static} GetOrCreateUnsafe(alignment:uint, hashCode:long, subHashCode:long) : SharedStatic<T>
    + {static} GetOrCreatePartiallyUnsafeWithHashCode(alignment:uint, hashCode:long) : SharedStatic<T>
    + {static} GetOrCreatePartiallyUnsafeWithSubHashCode(alignment:uint, subHashCode:long) : SharedStatic<T>
    + {static} GetOrCreate(contextType:Type, alignment:uint) : SharedStatic<T>
    + {static} GetOrCreate(contextType:Type, subContextType:Type, alignment:uint) : SharedStatic<T>
    - {static} CheckIf_T_IsUnmanagedOrThrow() : void
}
class SharedStatic <<static>> {
    - {static} CheckSizeOf(sizeOf:uint) : void
    - {static} <<unsafe>> CheckResult(result:void*) : void
    + {static} <<unsafe>> GetOrCreateSharedStaticInternal(getHashCode64:long, getSubHashCode64:long, sizeOf:uint, alignment:uint) : void*
}
class PreserveAttribute {
}
SharedStatic +-- PreserveAttribute
@enduml
