@startuml
enum GlobalSafetyChecksSettingKind {
    Off= 0,
    On= 1,
    ForceOn= 2,
}
class BurstCompilerOptions <<sealed>> <<partial>> {
    - <<const>> DisableCompilationArg : string = "--burst-disable-compilation"
    - <<const>> ForceSynchronousCompilationArg : string = "--burst-force-sync-compilation"
    <<internal>> <<const>> DefaultLibraryName : string = "lib_burst_generated"
    <<internal>> <<const>> BurstInitializeName : string = "burst.initialize"
    <<internal>> <<const>> BurstInitializeExternalsName : string = "burst.initialize.externals"
    <<internal>> <<const>> BurstInitializeStaticsName : string = "burst.initialize.statics"
    <<internal>> <<const>> OptionBurstcSwitch : string = "+burstc"
    <<internal>> <<const>> OptionGroup : string = "group"
    <<internal>> <<const>> OptionPlatform : string = "platform="
    <<internal>> <<const>> OptionBackend : string = "backend="
    <<internal>> <<const>> OptionGlobalSafetyChecksSetting : string = "global-safety-checks-setting="
    <<internal>> <<const>> OptionDisableSafetyChecks : string = "disable-safety-checks"
    <<internal>> <<const>> OptionDisableOpt : string = "disable-opt"
    <<internal>> <<const>> OptionFastMath : string = "fastmath"
    <<internal>> <<const>> OptionTarget : string = "target="
    <<internal>> <<const>> OptionOptLevel : string = "opt-level="
    <<internal>> <<const>> OptionLogTimings : string = "log-timings"
    <<internal>> <<const>> OptionOptForSize : string = "opt-for-size"
    <<internal>> <<const>> OptionFloatPrecision : string = "float-precision="
    <<internal>> <<const>> OptionFloatMode : string = "float-mode="
    <<internal>> <<const>> OptionBranchProtection : string = "branch-protection="
    <<internal>> <<const>> OptionDisableWarnings : string = "disable-warnings="
    <<internal>> <<const>> OptionAssemblyDefines : string = "assembly-defines="
    <<internal>> <<const>> OptionDump : string = "dump="
    <<internal>> <<const>> OptionFormat : string = "format="
    <<internal>> <<const>> OptionDebugTrap : string = "debugtrap"
    <<internal>> <<const>> OptionDisableVectors : string = "disable-vectors"
    <<internal>> <<const>> OptionDebug : string = "debug="
    <<internal>> <<const>> OptionDebugMode : string = "debugMode"
    <<internal>> <<const>> OptionStaticLinkage : string = "generate-static-linkage-methods"
    <<internal>> <<const>> OptionJobMarshalling : string = "generate-job-marshalling-methods"
    <<internal>> <<const>> OptionTempDirectory : string = "temp-folder="
    <<internal>> <<const>> OptionEnableDirectExternalLinking : string = "enable-direct-external-linking"
    <<internal>> <<const>> OptionLinkerOptions : string = "linker-options="
    <<internal>> <<const>> OptionEnableAutoLayoutFallbackCheck : string = "enable-autolayout-fallback-check"
    <<internal>> <<const>> OptionGenerateLinkXml : string = "generate-link-xml="
    <<internal>> <<const>> OptionMetaDataGeneration : string = "meta-data-generation="
    <<internal>> <<const>> OptionDisableStringInterpolationInExceptionMessages : string = "disable-string-interpolation-in-exception-messages"
    <<internal>> <<const>> OptionPlatformConfiguration : string = "platform-configuration="
    <<internal>> <<const>> OptionCacheDirectory : string = "cache-directory="
    <<internal>> <<const>> OptionJitDisableFunctionCaching : string = "disable-function-caching"
    <<internal>> <<const>> OptionJitDisableAssemblyCaching : string = "disable-assembly-caching"
    <<internal>> <<const>> OptionJitEnableAssemblyCachingLogs : string = "enable-assembly-caching-logs"
    <<internal>> <<const>> OptionJitEnableSynchronousCompilation : string = "enable-synchronous-compilation"
    <<internal>> <<const>> OptionJitCompilationPriority : string = "compilation-priority="
    <<internal>> <<const>> OptionJitIsForFunctionPointer : string = "is-for-function-pointer"
    <<internal>> <<const>> OptionJitManagedFunctionPointer : string = "managed-function-pointer="
    <<internal>> <<const>> OptionJitManagedDelegateHandle : string = "managed-delegate-handle="
    <<internal>> <<const>> OptionEnableInterpreter : string = "enable-interpreter"
    <<internal>> <<const>> OptionAotAssemblyFolder : string = "assembly-folder="
    <<internal>> <<const>> OptionRootAssembly : string = "root-assembly="
    <<internal>> <<const>> OptionIncludeRootAssemblyReferences : string = "include-root-assembly-references="
    <<internal>> <<const>> OptionAotMethod : string = "method="
    <<internal>> <<const>> OptionAotType : string = "type="
    <<internal>> <<const>> OptionAotAssembly : string = "assembly="
    <<internal>> <<const>> OptionAotOutputPath : string = "output="
    <<internal>> <<const>> OptionAotKeepIntermediateFiles : string = "keep-intermediate-files"
    <<internal>> <<const>> OptionAotNoLink : string = "nolink"
    <<internal>> <<const>> OptionAotOnlyStaticMethods : string = "only-static-methods"
    <<internal>> <<const>> OptionMethodPrefix : string = "method-prefix="
    <<internal>> <<const>> OptionAotNoNativeToolchain : string = "no-native-toolchain"
    <<internal>> <<const>> OptionAotEmitLlvmObjects : string = "emit-llvm-objects"
    <<internal>> <<const>> OptionAotKeyFolder : string = "key-folder="
    <<internal>> <<const>> OptionAotDecodeFolder : string = "decode-folder="
    <<internal>> <<const>> OptionVerbose : string = "verbose"
    <<internal>> <<const>> OptionValidateExternalToolChain : string = "validate-external-tool-chain"
    <<internal>> <<const>> OptionCompilerThreads : string = "threads="
    <<internal>> <<const>> OptionChunkSize : string = "chunk-size="
    <<internal>> <<const>> OptionPrintLogOnMissingPInvokeCallbackAttribute : string = "print-monopinvokecallbackmissing-message"
    <<internal>> <<const>> OptionOutputMode : string = "output-mode="
    <<internal>> <<const>> OptionAlwaysCreateOutput : string = "always-create-output="
    <<internal>> <<const>> OptionAotPdbSearchPaths : string = "pdb-search-paths="
    <<internal>> <<const>> OptionSafetyChecks : string = "safety-checks"
    <<internal>> <<const>> OptionLibraryOutputMode : string = "library-output-mode="
    <<internal>> <<const>> OptionCompilationId : string = "compilation-id="
    <<internal>> <<const>> OptionTargetFramework : string = "target-framework="
    <<internal>> <<const>> OptionDiscardAssemblies : string = "discard-assemblies="
    <<internal>> <<const>> OptionSaveExtraContext : string = "save-extra-context"
    <<internal>> <<const>> CompilerCommandShutdown : string = "$shutdown"
    <<internal>> <<const>> CompilerCommandCancel : string = "$cancel"
    <<internal>> <<const>> CompilerCommandEnableCompiler : string = "$enable_compiler"
    <<internal>> <<const>> CompilerCommandDisableCompiler : string = "$disable_compiler"
    <<internal>> <<const>> CompilerCommandSetDefaultOptions : string = "$set_default_options"
    <<internal>> <<const>> CompilerCommandTriggerSetupRecompilation : string = "$trigger_setup_recompilation"
    <<internal>> <<const>> CompilerCommandIsCurrentCompilationDone : string = "$is_current_compilation_done"
    <<internal>> <<const>> CompilerCommandTriggerRecompilation : string = "$trigger_recompilation"
    <<internal>> <<const>> CompilerCommandInitialize : string = "$initialize"
    <<internal>> <<const>> CompilerCommandDomainReload : string = "$domain_reload"
    <<internal>> <<const>> CompilerCommandVersionNotification : string = "$version"
    <<internal>> <<const>> CompilerCommandGetTargetCpuFromHost : string = "$get_target_cpu_from_host"
    <<internal>> <<const>> CompilerCommandSetProfileCallbacks : string = "$set_profile_callbacks"
    <<internal>> <<const>> CompilerCommandUnloadBurstNatives : string = "$unload_burst_natives"
    <<internal>> <<const>> CompilerCommandIsNativeApiAvailable : string = "$is_native_api_available"
    <<internal>> <<const>> CompilerCommandILPPCompilation : string = "$ilpp_compilation"
    <<internal>> <<const>> CompilerCommandIsArmTestEnv : string = "$is_arm_test_env"
    <<internal>> <<const>> CompilerCommandNotifyAssemblyCompilationNotRequired : string = "$notify_assembly_compilation_not_required"
    <<internal>> <<const>> CompilerCommandNotifyAssemblyCompilationFinished : string = "$notify_assembly_compilation_finished"
    <<internal>> <<const>> CompilerCommandNotifyCompilationStarted : string = "$notify_compilation_started"
    <<internal>> <<const>> CompilerCommandNotifyCompilationFinished : string = "$notify_compilation_finished"
    <<internal>> <<const>> CompilerCommandAotCompilation : string = "$aot_compilation"
    <<internal>> <<const>> CompilerCommandRequestInitialiseDebuggerCommmand : string = "$request_debug_command"
    <<internal>> <<const>> CompilerCommandInitialiseDebuggerCommmand : string = "$load_debugger_interface"
    <<internal>> <<const>> CompilerCommandRequestSetProtocolVersionEditor : string = "$request_set_protocol_version_editor"
    <<internal>> <<const>> CompilerCommandSetProtocolVersionBurst : string = "$set_protocol_version_burst"
    <<internal>> {static} SerialiseCompilationOptionsSafe(roots:string[], folders:string[], options:string) : string
    <<internal>> {static} DeserialiseCompilationOptionsSafe(from:string) : (string[] roots, string[] folders, string options)
    <<internal>> {static} <<readonly>> ForceDisableBurstCompilation : bool
    - {static} <<readonly>> ForceBurstCompilationSynchronously : bool
    <<internal>> {static} <<readonly>> IsSecondaryUnityProcess : bool
    - _enableBurstCompilation : bool
    - _enableBurstCompileSynchronously : bool
    - _enableBurstSafetyChecks : bool
    - _enableBurstTimings : bool
    - _enableBurstDebug : bool
    - _forceEnableBurstSafetyChecks : bool
    - BurstCompilerOptions()
    <<internal>> BurstCompilerOptions(isGlobal:bool)
    - IsGlobal : bool <<get>>
    + IsEnabled : bool <<get>>
    + EnableBurstCompilation : bool <<get>> <<set>>
    + EnableBurstCompileSynchronously : bool <<get>> <<set>>
    + EnableBurstSafetyChecks : bool <<get>> <<set>>
    + ForceEnableBurstSafetyChecks : bool <<get>> <<set>>
    + EnableBurstDebug : bool <<get>> <<set>>
    + DisableOptimizations : bool <<get>> <<set>>
    + EnableFastMath : bool <<get>> <<set>>
    <<internal>> EnableBurstTimings : bool <<get>> <<set>>
    <<internal>> RequiresSynchronousCompilation : bool <<get>>
    <<internal>> OptionsChanged : Action <<get>> <<set>>
    <<internal>> Clone() : BurstCompilerOptions
    - {static} TryGetAttribute(member:MemberInfo, attribute:BurstCompileAttribute) : bool
    - {static} TryGetAttribute(assembly:Assembly, attribute:BurstCompileAttribute) : bool
    - {static} GetBurstCompileAttribute(memberInfo:MemberInfo) : BurstCompileAttribute
    <<internal>> {static} HasBurstCompileAttribute(member:MemberInfo) : bool
    <<internal>> {static} MergeAttributes(memberAttribute:BurstCompileAttribute, assemblyAttribute:BurstCompileAttribute) : void
    <<internal>> TryGetOptions(member:MemberInfo, flagsOut:string, isForILPostProcessing:bool, isForCompilerClient:bool) : bool
    <<internal>> GetOptions(attr:BurstCompileAttribute, isForILPostProcessing:bool, isForCompilerClient:bool) : string
    - {static} AddOption(builder:StringBuilder, option:string) : void
    <<internal>> {static} GetOption(optionName:string, value:object) : string
    - OnOptionsChanged() : void
    - MaybeTriggerRecompilation() : void
    {static} - BurstCompilerOptions()
    - {static} CheckIsSecondaryUnityProcess() : bool
}
enum BurstTargetCpu {
    Auto= 0,
    X86_SSE2= 1,
    X86_SSE4= 2,
    X64_SSE2= 3,
    X64_SSE4= 4,
    AVX= 5,
    AVX2= 6,
    WASM32= 7,
    ARMV7A_NEON32= 8,
    ARMV8A_AARCH64= 9,
    THUMB2_NEON32= 10,
    ARMV8A_AARCH64_HALFFP= 11,
    ARMV9A= 12,
}
enum NativeDumpFlags {
    None= 0,
    IL= 1 << 0,
    Unused= 1 << 1,
    IR= 1 << 2,
    IROptimized= 1 << 3,
    Asm= 1 << 4,
    Function= 1 << 5,
    Analysis= 1 << 6,
    IRPassAnalysis= 1 << 7,
    ILPre= 1 << 8,
    IRPerEntryPoint= 1 << 9,
    All= IL | ILPre | IR | IROptimized | IRPerEntryPoint | Asm | Function | Analysis | IRPassAnalysis,
}
enum CompilationPriority {
    EagerCompilationSynchronous= 0,
    Asynchronous= 1,
    ILPP= 2,
    EagerCompilationAsynchronous= 3,
}
@enduml
