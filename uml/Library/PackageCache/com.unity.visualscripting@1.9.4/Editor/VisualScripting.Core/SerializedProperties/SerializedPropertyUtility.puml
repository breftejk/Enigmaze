@startuml
class SerializedPropertyUtility <<static>> {
    {static} - SerializedPropertyUtility()
    - {static} <<readonly>> CustomPropertyDrawer_m_Type : FieldInfo
    - {static} <<readonly>> CustomPropertyDrawer_m_UseForChildren : FieldInfo
    - {static} _drawerTypeAttributes : HashSet<CustomPropertyDrawer>
    - {static} drawerTypeAttributes : HashSet<CustomPropertyDrawer> <<get>>
    + {static} HasCustomDrawer(type:Type) : bool
    + {static} CreateTemporaryProperty(type:Type) : SerializedProperty
    + {static} DestroyTemporaryProperty(property:SerializedProperty) : void
    + {static} GetPropertyHash(property:SerializedProperty) : int
    + {static} FindPropertyRelativeOrFail(property:SerializedProperty, path:string) : SerializedProperty
    + {static} FindPropertyOrFail(serializedObject:SerializedObject, path:string) : SerializedProperty
    + {static} FixedPropertyPath(property:SerializedProperty) : string
    + {static} PropertyPathParts(property:SerializedProperty) : string[]
    + {static} IsPropertyIndexer(propertyPart:string, fieldName:string, index:int) : bool
    - {static} EnsureReflectable(property:SerializedProperty) : void
    - {static} SerializedObjectLabel(serializedObject:SerializedObject) : string
    + {static} GetUnderlyingValue(property:SerializedProperty) : object
    + {static} GetUnderlyingType(property:SerializedProperty) : Type
    + {static} GetUnderlyingField(property:SerializedProperty) : FieldInfo
    + {static} SetUnderlyingValue(property:SerializedProperty, value:object) : void
    - {static} GetPropertyPartValue(propertyPathPart:string, parent:object) : object
    - {static} GetPropertyPartType(propertyPathPart:string, type:Type) : Type
    - {static} GetSerializedFieldInfo(type:Type, name:string) : FieldInfo
}
@enduml
