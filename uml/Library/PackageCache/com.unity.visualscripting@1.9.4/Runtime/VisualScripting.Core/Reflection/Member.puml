@startuml
class Member <<sealed>> {
    + Member()
    + Member(targetType:Type, name:string, parameterTypes:Type[])
    + Member(targetType:Type, fieldInfo:FieldInfo)
    + Member(targetType:Type, propertyInfo:PropertyInfo)
    + Member(targetType:Type, methodInfo:MethodInfo)
    + Member(targetType:Type, constructorInfo:ConstructorInfo)
    - _name : string
    - _parameterTypes : Type[]
    - _targetType : Type
    - _targetTypeName : string
    - _source : Source
    - _fieldInfo : FieldInfo
    - _propertyInfo : PropertyInfo
    - _methodInfo : MethodInfo
    - _constructorInfo : ConstructorInfo
    - _isExtension : bool
    - _isInvokedAsExtension : bool
    - fieldAccessor : IOptimizedAccessor
    - propertyAccessor : IOptimizedAccessor
    - methodInvoker : IOptimizedInvoker
    + targetType : Type <<get>>
    + targetTypeName : string <<get>>
    + name : string <<get>>
    + isReflected : bool <<get>>
    + source : Source <<get>>
    + fieldInfo : FieldInfo <<get>>
    + propertyInfo : PropertyInfo <<get>>
    + methodInfo : MethodInfo <<get>>
    + constructorInfo : ConstructorInfo <<get>>
    + isExtension : bool <<get>>
    + isInvokedAsExtension : bool <<get>>
    + parameterTypes : Type[] <<get>>
    + methodBase : MethodBase <<get>>
    - _info : MemberInfo <<get>>
    + info : MemberInfo <<get>>
    + type : Type <<get>>
    + isCoroutine : bool <<get>>
    + isYieldInstruction : bool <<get>>
    + isGettable : bool <<get>>
    + isPubliclyGettable : bool <<get>>
    + isSettable : bool <<get>>
    + isPubliclySettable : bool <<get>>
    + isInvocable : bool <<get>>
    + isPubliclyInvocable : bool <<get>>
    + isAccessor : bool <<get>>
    + isField : bool <<get>>
    + isProperty : bool <<get>>
    + isMethod : bool <<get>>
    + isConstructor : bool <<get>>
    + requiresTarget : bool <<get>>
    + isOperator : bool <<get>>
    + isConversion : bool <<get>>
    + order : int <<get>>
    + declaringType : Type <<get>>
    + isInherited : bool <<get>>
    + pseudoDeclaringType : Type <<get>>
    + isPseudoInherited : bool <<get>>
    + isIndexer : bool <<get>>
    + isPredictable : bool <<get>>
    + allowsNull : bool <<get>>
    - OnBeforeSerialize() : void
    - OnAfterDeserialize() : void
    + IsGettable(nonPublic:bool) : bool
    + IsSettable(nonPublic:bool) : bool
    + IsInvocable(nonPublic:bool) : bool
    - EnsureExplicitParameterTypes() : void
    + Reflect() : void
    - ReflectField(candidates:IEnumerable<MemberInfo>) : void
    - ReflectProperty(candidates:IEnumerable<MemberInfo>) : void
    - ReflectConstructor(candidates:IEnumerable<MemberInfo>) : void
    - ReflectMethod(candidates:IEnumerable<MemberInfo>) : void
    + Prewarm() : void
    + EnsureReflected() : void
    + EnsureReady(target:object) : void
    + Get(target:object) : object
    + Get(target:object) : T
    + Set(target:object, value:object) : object
    - EnsureInvocable(target:object) : void
    + GetParameterInfos() : IEnumerable<ParameterInfo>
    + Invoke(target:object) : object
    + Invoke(target:object, arg0:object) : object
    + Invoke(target:object, arg0:object, arg1:object) : object
    + Invoke(target:object, arg0:object, arg1:object, arg2:object) : object
    + Invoke(target:object, arg0:object, arg1:object, arg2:object, arg3:object) : object
    + Invoke(target:object, arg0:object, arg1:object, arg2:object, arg3:object, arg4:object) : object
    + Invoke(target:object, arguments:object[]) : object
    + Invoke(target:object) : T
    + Invoke(target:object, arg0:object) : T
    + Invoke(target:object, arg0:object, arg1:object) : T
    + Invoke(target:object, arg0:object, arg1:object, arg2:object) : T
    + Invoke(target:object, arg0:object, arg1:object, arg2:object, arg3:object) : T
    + Invoke(target:object, arg0:object, arg1:object, arg2:object, arg3:object, arg4:object) : T
    + Invoke(target:object, arguments:object[]) : T
    + <<override>> Equals(obj:object) : bool
    + <<override>> GetHashCode() : int
    + ToUniqueString() : string
    + <<override>> ToString() : string
    + ToDeclarer() : Member
    + ToPseudoDeclarer() : Member
    + <<const>> SupportedMemberTypes : MemberTypes
    + <<const>> SupportedBindingFlags : BindingFlags
    - {static} <<readonly>> EmptyObjects : object[]
}
enum Source {
    Unknown,
    Field,
    Property,
    Method,
    Constructor,
}
ISerializationCallbackReceiver <|-- Member
Member +-- Source
@enduml
