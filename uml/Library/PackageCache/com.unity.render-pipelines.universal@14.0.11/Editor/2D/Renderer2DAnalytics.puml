@startuml
struct AnalyticsDataTypes {
    + <<const>> k_LightDataString : string = "u2drendererlights"
    + <<const>> k_Renderer2DDataString : string = "u2drendererdata"
}
interface IAnalyticsData {
}
struct Light2DData {
    + was_create_event : bool
    + instance_id : int
    + light_type : Light2D.LightType
}
struct RendererAssetData {
    + was_create_event : bool
    + instance_id : int
    + blending_layers_count : int
    + blending_modes_used : int
}
interface IAnalytics {
    SendData(eventString:string, data:IAnalyticsData) : AnalyticsResult
}
class Renderer2DAnalytics {
    <<const>> - k_MaxEventsPerHour : int = 1000
    <<const>> - k_MaxNumberOfElements : int = 1000
    <<const>> - k_VendorKey : string = "unity.renderpipelines.universal.editor"
    <<const>> - k_Version : int = 1
    {static} - m_Instance : Renderer2DAnalytics
    {static} - s_Initialize : bool = false
    + {static} instance : Renderer2DAnalytics <<get>>
    + SendData(eventString:string, data:IAnalyticsData) : AnalyticsResult
}
IAnalyticsData <|-- Light2DData
IAnalyticsData <|-- RendererAssetData
IAnalytics <|-- Renderer2DAnalytics
@enduml
