@startuml
class DecalDrawGBufferSystem {
    + DecalDrawGBufferSystem(entityManager:DecalEntityManager)
    # <<override>> GetPassIndex(decalCachedChunk:DecalCachedChunk) : int
}
class DecalGBufferRenderPass {
    - m_FilteringSettings : FilteringSettings
    - m_ProfilingSampler : ProfilingSampler
    - m_ShaderTagIdList : List<ShaderTagId>
    - m_DrawSystem : DecalDrawGBufferSystem
    - m_Settings : DecalScreenSpaceSettings
    - m_DeferredLights : DeferredLights
    - m_GbufferAttachments : RTHandle[]
    - m_DecalLayers : bool
    + DecalGBufferRenderPass(settings:DecalScreenSpaceSettings, drawSystem:DecalDrawGBufferSystem, decalLayers:bool)
    <<internal>> Setup(deferredLights:DeferredLights) : void
    + <<override>> Configure(cmd:CommandBuffer, cameraTextureDescriptor:RenderTextureDescriptor) : void
    + <<override>> Execute(context:ScriptableRenderContext, renderingData:RenderingData) : void
    + <<override>> OnCameraCleanup(cmd:CommandBuffer) : void
}
DecalDrawSystem <|-- DecalDrawGBufferSystem
ScriptableRenderPass <|-- DecalGBufferRenderPass
@enduml
