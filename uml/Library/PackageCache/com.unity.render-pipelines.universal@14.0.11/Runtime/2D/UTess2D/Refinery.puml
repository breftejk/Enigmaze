@startuml
struct Refinery {
    - {static} <<readonly>> kMinAreaFactor : float = 0.0482f
    - {static} <<readonly>> kMaxAreaFactor : float = 0.4820f
    - {static} <<readonly>> kMaxSteinerCount : int = 4084
    {static} - RequiresRefining(tri:UTriangle, maxArea:float) : bool
    {static} - FetchEncroachedSegments(pgPoints:NativeArray<float2>, pgPointCount:int, pgEdges:NativeArray<int2>, pgEdgeCount:int, encroach:NativeArray<UEncroachingSegment>, encroachCount:int, c:UCircle) : void
    {static} - InsertVertex(pgPoints:NativeArray<float2>, pgPointCount:int, newVertex:float2, nid:int) : void
    {static} - FindSegment(pgPoints:NativeArray<float2>, pgPointCount:int, pgEdges:NativeArray<int2>, pgEdgeCount:int, es:UEncroachingSegment) : int
    {static} - SplitSegments(pgPoints:NativeArray<float2>, pgPointCount:int, pgEdges:NativeArray<int2>, pgEdgeCount:int, es:UEncroachingSegment) : void
    <<internal>> {static} Condition(allocator:Allocator, factorArea:float, targetArea:float, pgPoints:NativeArray<float2>, pgPointCount:int, pgEdges:NativeArray<int2>, pgEdgeCount:int, vertices:NativeArray<float2>, vertexCount:int, indices:NativeArray<int>, indexCount:int, maxArea:float) : bool
}
@enduml
