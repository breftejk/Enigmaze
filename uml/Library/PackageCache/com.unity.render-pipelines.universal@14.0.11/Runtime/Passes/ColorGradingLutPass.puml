@startuml
class ColorGradingLutPass {
    <<readonly>> - m_LutBuilderLdr : Material
    <<readonly>> - m_LutBuilderHdr : Material
    <<internal>> <<readonly>> m_HdrLutFormat : GraphicsFormat
    <<internal>> <<readonly>> m_LdrLutFormat : GraphicsFormat
    - m_PassData : PassData
    - m_InternalLut : RTHandle
    - m_AllowColorGradingACESHDR : bool = true
    + ColorGradingLutPass(evt:RenderPassEvent, data:PostProcessData)
    + Setup(internalLut:RTHandle) : void
    + ConfigureDescriptor(postProcessingData:PostProcessingData, descriptor:RenderTextureDescriptor, filterMode:FilterMode) : void
    + <<override>> Execute(context:ScriptableRenderContext, renderingData:RenderingData) : void
    - {static} ExecutePass(context:ScriptableRenderContext, passData:PassData, renderingData:RenderingData, internalLutTarget:RTHandle) : void
    <<internal>> Render(renderGraph:RenderGraph, internalColorLut:TextureHandle, renderingData:RenderingData) : void
    + Cleanup() : void
}
class PassData {
    <<internal>> renderingData : RenderingData
    <<internal>> lutBuilderLdr : Material
    <<internal>> lutBuilderHdr : Material
    <<internal>> allowColorGradingACESHDR : bool
    <<internal>> internalLut : TextureHandle
}
class ShaderConstants <<static>> {
    + {static} <<readonly>> _Lut_Params : int
    + {static} <<readonly>> _ColorBalance : int
    + {static} <<readonly>> _ColorFilter : int
    + {static} <<readonly>> _ChannelMixerRed : int
    + {static} <<readonly>> _ChannelMixerGreen : int
    + {static} <<readonly>> _ChannelMixerBlue : int
    + {static} <<readonly>> _HueSatCon : int
    + {static} <<readonly>> _Lift : int
    + {static} <<readonly>> _Gamma : int
    + {static} <<readonly>> _Gain : int
    + {static} <<readonly>> _Shadows : int
    + {static} <<readonly>> _Midtones : int
    + {static} <<readonly>> _Highlights : int
    + {static} <<readonly>> _ShaHiLimits : int
    + {static} <<readonly>> _SplitShadows : int
    + {static} <<readonly>> _SplitHighlights : int
    + {static} <<readonly>> _CurveMaster : int
    + {static} <<readonly>> _CurveRed : int
    + {static} <<readonly>> _CurveGreen : int
    + {static} <<readonly>> _CurveBlue : int
    + {static} <<readonly>> _CurveHueVsHue : int
    + {static} <<readonly>> _CurveHueVsSat : int
    + {static} <<readonly>> _CurveLumVsSat : int
    + {static} <<readonly>> _CurveSatVsSat : int
}
ScriptableRenderPass <|-- ColorGradingLutPass
ColorGradingLutPass +-- PassData
ColorGradingLutPass +-- ShaderConstants
@enduml
