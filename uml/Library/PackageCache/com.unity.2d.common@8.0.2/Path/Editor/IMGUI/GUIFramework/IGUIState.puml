@startuml
struct SliderData {
    + position : Vector3
    + forward : Vector3
    + up : Vector3
    + right : Vector3
    + {static} <<readonly>> zero : SliderData
}
interface IGUIState {
    mousePosition : Vector2 <<get>>
    mouseButton : int <<get>>
    clickCount : int <<get>> <<set>>
    isShiftDown : bool <<get>>
    isAltDown : bool <<get>>
    isActionKeyDown : bool <<get>>
    keyCode : KeyCode <<get>>
    eventType : EventType <<get>>
    commandName : string <<get>>
    nearestControl : int <<get>> <<set>>
    hotControl : int <<get>> <<set>>
    changed : bool <<get>> <<set>>
    GetControlID(hint:int, focusType:FocusType) : int
    AddControl(controlID:int, distance:float) : void
    Slider(id:int, sliderData:SliderData, newPosition:Vector3) : bool
    UseEvent() : void
    Repaint() : void
    HasCurrentCamera() : bool
    GetHandleSize(position:Vector3) : float
    DistanceToSegment(p1:Vector3, p2:Vector3) : float
    DistanceToCircle(center:Vector3, radius:float) : float
    GUIToWorld(guiPosition:Vector2, planeNormal:Vector3, planePos:Vector3) : Vector3
}
@enduml
