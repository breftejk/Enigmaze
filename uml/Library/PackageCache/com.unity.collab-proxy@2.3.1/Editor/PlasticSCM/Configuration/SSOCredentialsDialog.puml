@startuml
class SSOCredentialsDialog {
    # <<override>> DefaultRect : Rect <<get>>
    <<internal>> {static} RequestCredentials(cloudServer:string, parentWindow:EditorWindow) : AskCredentialsToUser.DialogData
    # <<override>> OnModalGUI() : void
    # <<override>> GetTitle() : string
    - BuildCredentialsDialogData(dialogResult:ResponseType) : AskCredentialsToUser.DialogData
    - SuccessForSSO(organization:string) : void
    - SuccessForProfile(email:string) : void
    - SuccessForCredentials(email:string, accessToken:string) : void
    - SuccessForHomeView(usrName:string) : void
    - Cancel(errorMessage:string) : void
    - SuccessForConfigure(organizations:List<string>, canCreateAnOrganization:bool, userName:string, accessToken:string) : void
    - DoButtonsArea() : void
    <<internal>> OAuthSignInForConfigure(signInUrl:Uri, state:Guid, getOauthToken:IGetOauthToken) : void
    - DoUnityIDButton() : void
    - DoEntriesArea() : void
    - DoOkButton() : void
    - DoCancelButton() : void
    - OkButtonWithValidationAction() : void
    - SuccessForConfigure(organizations:List<string>, canCreateAnOrganization:bool, userName:string, password:string) : void
    - SuccessForSSO(organization:string) : void
    - SuccessForCredentials(userName:string, password:string) : void
    - SuccessForProfile(userName:string) : void
    - SuccessForHomeView(userName:string) : void
    - ValidationFailed(validationResult:Login.ValidationResult) : void
    - SignUpNeeded(loginData:Login.Data) : void
    - Error(message:string) : void
    {static} - Create(server:string, progressControls:ProgressControlsForDialogs) : SSOCredentialsDialog
    - mEmail : string
    - mPassword : string
    - mProgressControls : ProgressControlsForDialogs
    - mServer : string
    <<const>> - ENTRY_WIDTH : float = 345f
    <<const>> - ENTRY_X : float = 150f
}
PlasticDialog <|-- SSOCredentialsDialog
@enduml
