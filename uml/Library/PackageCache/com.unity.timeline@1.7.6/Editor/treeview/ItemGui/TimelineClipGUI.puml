@startuml
class TimelineClipGUI {
    - m_EditorItem : EditorClip
    - m_ClipCenterSection : Rect
    <<readonly>> - m_LoopRects : List<Rect>
    - m_ClipDrawData : ClipDrawData
    - m_MixOutRect : Rect
    - m_MixInRect : Rect
    - m_MinLoopIndex : int = 1
    - m_LastDirtyIndex : int
    - m_ClipViewDirty : bool = true
    - supportResize : bool <<get>>
    + clipCurveEditor : ClipCurveEditor <<get>> <<set>>
    + previousClip : TimelineClipGUI <<get>> <<set>>
    + nextClip : TimelineClipGUI <<get>> <<set>>
    {static} <<readonly>> - k_MinMixWidth : float = 2
    {static} <<readonly>> - k_MaxHandleWidth : float = 10f
    {static} <<readonly>> - k_MinHandleWidth : float = 1f
    - m_ShowDrillIcon : bool?
    - m_ClipEditor : ClipEditor
    {static} - s_TempSubDirectors : List<PlayableDirector>
    {static} <<readonly>> - k_DiggableClipIcon : IconData
    - name : string <<get>>
    + inlineCurvesSelected : bool <<get>>
    + mixOutRect : Rect <<get>>
    + mixInRect : Rect <<get>>
    + GetClipBlends() : ClipBlends
    + <<override>> start : double <<get>>
    + <<override>> end : double <<get>>
    + supportsLooping : bool <<get>>
    - showLoops : bool <<get>>
    - owner : TrackAsset <<get>>
    + supportsSubTimelines : bool <<get>>
    + minLoopIndex : int <<get>>
    + clippedRect : Rect <<get>>
    + <<override>> Select() : void
    + <<override>> IsSelected() : bool
    + <<override>> Deselect() : void
    + <<override>> CanSelect(evt:Event) : bool
    {static} - IsPointLocatedInClipBlend(pt:Vector2, blends:ClipBlends) : bool
    {static} - Sign(point:Vector2, linePoint1:Vector2, linePoint2:Vector2) : float
    + <<override>> item : ITimelineItem <<get>>
    - zOrderProvider : IZOrderProvider <<get>>
    + leftHandle : TimelineClipHandle <<get>>
    + rightHandle : TimelineClipHandle <<get>>
    + TimelineClipGUI(clip:TimelineClip, parent:IRowGUI, provider:IZOrderProvider)
    - CreateInlineCurveEditor(state:WindowState) : void
    + clip : TimelineClip <<get>>
    - UpdateDrawData(state:WindowState, drawRect:Rect, title:string, selected:bool, previousClipSelected:bool, rectXOffset:float) : void
    - UpdateClipIcons(state:WindowState) : void
    {static} - UpdateClipDrawOptions(clipEditor:ClipEditor, clip:TimelineClip) : ClipDrawOptions
    {static} - DrawClip(drawData:ClipDrawData) : void
    + DrawGhostClip(targetRect:Rect) : void
    + DrawInvalidClip(targetRect:Rect) : void
    - DrawSimpleClip(targetRect:Rect, border:ClipBorder, overlay:Color) : void
    - DrawInto(drawRect:Rect, state:WindowState) : void
    - CalculateClipRectangle(trackRect:Rect, state:WindowState) : void
    - AddToSpacePartitioner(state:WindowState) : void
    - CalculateBlendRect() : void
    + <<override>> Draw(trackRect:Rect, trackRectChanged:bool, state:WindowState) : void
    - DetectClipChanged(trackRectChanged:bool) : void
    - ResetClipChanged() : void
    <<internal>> MoveToTop() : void
    - GetExtrapolationIcon(mode:TimelineClip.ClipExtrapolation) : GUIStyle
    - GetPreExtrapolationBounds(trackRect:Rect, clipRect:Rect, icon:GUIStyle) : Rect
    - GetPostExtrapolationBounds(trackRect:Rect, clipRect:Rect, icon:GUIStyle) : Rect
    {static} - DrawExtrapolationIcon(rect:Rect, icon:GUIStyle) : void
    - DrawExtrapolation(trackRect:Rect, clipRect:Rect) : void
    {static} - ProjectRectOnTimeline(rect:Rect, trackRect:Rect, state:WindowState) : Rect
    - CalculateLoopRects(trackRect:Rect, state:WindowState) : void
    + <<override>> RectToTimeline(trackRect:Rect, state:WindowState) : Rect
    + SnappableEdgesFor(attractable:IAttractable, manipulateEdges:ManipulateEdges) : IEnumerable<Edge>
    + ShouldSnapTo(snappable:ISnappable) : bool
    - ShowDrillIcon(resolver:PlayableDirector) : bool
    {static} - AddEdge(edges:List<Edge>, time:double, showEdgeHint:bool) : void
    + SelectCurves() : void
    + ValidateCurvesSelection() : void
}
TimelineItemGUI <|-- TimelineClipGUI
IClipCurveEditorOwner <|-- TimelineClipGUI
ISnappable <|-- TimelineClipGUI
IAttractable <|-- TimelineClipGUI
@enduml
