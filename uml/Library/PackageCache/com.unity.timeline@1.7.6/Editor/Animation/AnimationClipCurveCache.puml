@startuml
struct CurveBindingPair {
    + binding : EditorCurveBinding
    + curve : AnimationCurve
    + objectCurve : ObjectReferenceKeyframe[]
}
class CurveBindingGroup {
    + curveBindingPairs : CurveBindingPair[] <<get>> <<set>>
    + timeRange : Vector2 <<get>> <<set>>
    + valueRange : Vector2 <<get>> <<set>>
    + isFloatCurve : bool <<get>>
    + isObjectCurve : bool <<get>>
    + count : int <<get>>
}
class AnimationClipCurveInfo {
    - m_CurveDirty : bool = true
    - m_KeysDirty : bool = true
    + dirty : bool <<get>> <<set>>
    + curves : AnimationCurve[]
    + bindings : EditorCurveBinding[]
    + objectBindings : EditorCurveBinding[]
    + objectCurves : List<ObjectReferenceKeyframe[]>
    - m_groupings : Dictionary<string, CurveBindingGroup>
    + version : int <<get>>
    - m_KeyTimes : float[]
    - m_individualBindinsKey : Dictionary<EditorCurveBinding, float[]>
    + keyTimes : float[] <<get>>
    + GetCurveTimes(curve:EditorCurveBinding) : float[]
    + GetCurveTimes(curves:EditorCurveBinding[]) : float[]
    - RebuildKeyCache() : void
    + Update(clip:AnimationClip) : void
    + GetBindingForCurve(curve:AnimationCurve, binding:EditorCurveBinding) : bool
    + GetCurveForBinding(binding:EditorCurveBinding) : AnimationCurve
    + GetObjectCurveForBinding(binding:EditorCurveBinding) : ObjectReferenceKeyframe[]
    + GetGroupBinding(groupID:string) : CurveBindingGroup
}
class AnimationClipCurveCache {
    {static} - s_Instance : AnimationClipCurveCache
    - m_ClipCache : Dictionary<AnimationClip, AnimationClipCurveInfo>
    - m_IsEnabled : bool
    + {static} Instance : AnimationClipCurveCache <<get>>
    + OnEnable() : void
    + OnDisable() : void
    - OnCurveWasModified(clip:AnimationClip, binding:EditorCurveBinding, modification:AnimationUtility.CurveModifiedType) : void
    + GetCurveInfo(clip:AnimationClip) : AnimationClipCurveInfo
    + ClearCachedProxyClips() : void
    + Clear() : void
}
class EditorCurveBindingExtension <<static>> {
    + {static} GetGroupID(binding:EditorCurveBinding) : string
}
class CurveBindingGroupExtensions <<static>> {
    + {static} IsEnableGroup(curves:CurveBindingGroup) : bool
    + {static} IsVectorGroup(curves:CurveBindingGroup) : bool
    + {static} IsColorGroup(curves:CurveBindingGroup) : bool
    + {static} GetDescription(group:CurveBindingGroup, t:float) : string
}
@enduml
