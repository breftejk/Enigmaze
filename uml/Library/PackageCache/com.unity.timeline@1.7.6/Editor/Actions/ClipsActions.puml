@startuml
class EditClipInAnimationWindow {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
    - {static} GetEditableClip(clips:IEnumerable<TimelineClip>, clip:TimelineClip, animClip:AnimationClip) : bool
}
class EditSubTimeline {
    - {static} <<readonly>> MultiItemPrefix : string = "Edit Sub-Timelines/"
    - {static} <<readonly>> SingleItemPrefix : string = "Edit "
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
    {static} - ExecuteInternal(directors:IList<PlayableDirector>, directorIndex:int, clip:TimelineClip) : void
    <<internal>> AddMenuItem(menuItems:List<MenuActionItem>) : void
}
class TrimStart {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
class TrimEnd {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
class Split {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
class CompleteLastLoop {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
class TrimLastLoop {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
class MatchDuration {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
class DoubleSpeed {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
class HalfSpeed {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
class ResetDuration {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
class ResetSpeed {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
class ResetAll {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
class Tile {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
class FindSourceAsset {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
    - {static} GetExternalPlayableAsset(clip:TimelineClip) : UnityEngine.Object
    - {static} GetUnderlyingAsset(clip:TimelineClip) : UnityEngine.Object
}
class CopyClipsToClipboard {
    + <<override>> Validate(clips:IEnumerable<TimelineClip>) : ActionValidity
    + <<override>> Execute(clips:IEnumerable<TimelineClip>) : bool
}
ClipAction <|-- EditClipInAnimationWindow
ClipAction <|-- EditSubTimeline
ClipAction <|-- TrimStart
ClipAction <|-- TrimEnd
ClipAction <|-- Split
ClipAction <|-- CompleteLastLoop
ClipAction <|-- TrimLastLoop
ClipAction <|-- MatchDuration
ClipAction <|-- DoubleSpeed
ClipAction <|-- HalfSpeed
ClipAction <|-- ResetDuration
ClipAction <|-- ResetSpeed
ClipAction <|-- ResetAll
ClipAction <|-- Tile
ClipAction <|-- FindSourceAsset
ClipAction <|-- CopyClipsToClipboard
@enduml
