@startuml
class SequenceHierarchy {
    <<readonly>> - m_Sequences : List<ISequenceState>
    - m_WindowState : WindowState
    - m_SerializedPath : SequencePath
    + masterSequence : ISequenceState <<get>>
    + editSequence : ISequenceState <<get>>
    + count : int <<get>>
    + allSequences : IEnumerable<ISequenceState> <<get>>
    + {static} CreateInstance() : SequenceHierarchy
    + Init(owner:WindowState) : void
    - OnValidate() : void
    + Add(asset:TimelineAsset, director:PlayableDirector, hostClip:TimelineClip) : void
    + Remove() : void
    + GetStateAtIndex(index:int) : ISequenceState
    + RemoveUntilCount(expectedCount:int) : void
    + Clear() : void
    + ToSequencePath() : SequencePath
    + NeedsUpdate(path:SequencePath, forceRebuild:bool) : bool
    + FromSequencePath(path:SequencePath, forceRebuild:bool) : void
    - Add_Internal(asset:TimelineAsset, director:PlayableDirector, hostClip:TimelineClip) : void
    - Remove_Internal() : void
    - RemoveUntilCount_Internal(expectedCount:int) : void
    - Clear_Internal() : void
    - UpdateSerializedPath() : void
    {static} - ValidateSubElements(subElements:List<SequencePathSubElement>, director:PlayableDirector, buildingBlocks:List<SequenceBuildingBlock>) : bool
    {static} - AddToCurrentUndoGroup(target:Object) : void
}
struct SequenceBuildingBlock {
    + asset : TimelineAsset
    + director : PlayableDirector
    + hostClip : TimelineClip
}
ScriptableObject <|-- SequenceHierarchy
SequenceHierarchy +-- SequenceBuildingBlock
@enduml
