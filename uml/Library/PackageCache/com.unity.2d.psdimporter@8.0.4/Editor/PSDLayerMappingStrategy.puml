@startuml
interface IPSDLayerMappingStrategyComparable {
    layerID : int <<get>>
    name : string <<get>>
    isGroup : bool <<get>>
}
interface IPSDLayerMappingStrategy {
    Compare(a:IPSDLayerMappingStrategyComparable, b:IPSDLayerMappingStrategyComparable) : bool
    Compare(a:IPSDLayerMappingStrategyComparable, b:BitmapLayer) : bool
    LayersUnique(layers:IEnumerable<IPSDLayerMappingStrategyComparable>) : string
}
abstract class "LayerMappingStrategy`1"<T> {
    - m_DuplicatedStringError : string
    # {abstract} GetID(layer:IPSDLayerMappingStrategyComparable) : T
    # {abstract} GetID(layer:BitmapLayer) : T
    # <<virtual>> IsGroup(layer:IPSDLayerMappingStrategyComparable) : bool
    # <<virtual>> IsGroup(layer:BitmapLayer) : bool
    + Compare(x:IPSDLayerMappingStrategyComparable, y:BitmapLayer) : bool
    + Compare(x:IPSDLayerMappingStrategyComparable, y:IPSDLayerMappingStrategyComparable) : bool
    + LayersUnique(layers:IEnumerable<IPSDLayerMappingStrategyComparable>) : string
    - LayersUnique(layers:IEnumerable<IPSDLayerMappingStrategyComparable>, layerNameHash:HashSet<T>, layerGroupHash:HashSet<T>) : string
}
class LayerMappingUseLayerName {
    # <<override>> GetID(x:IPSDLayerMappingStrategyComparable) : string
    # <<override>> GetID(x:BitmapLayer) : string
}
class LayerMappingUseLayerNameCaseSensitive {
    # <<override>> GetID(x:IPSDLayerMappingStrategyComparable) : string
    # <<override>> GetID(x:BitmapLayer) : string
}
class LayerMappingUserLayerID {
    # <<override>> GetID(x:IPSDLayerMappingStrategyComparable) : int
    # <<override>> GetID(x:BitmapLayer) : int
}
IPSDLayerMappingStrategy <|-- "LayerMappingStrategy`1"
"LayerMappingStrategy`1" "<string>" <|-- LayerMappingUseLayerName
"LayerMappingStrategy`1" "<string>" <|-- LayerMappingUseLayerNameCaseSensitive
"LayerMappingStrategy`1" "<int>" <|-- LayerMappingUserLayerID
@enduml
